<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on trang1618</title>
    <link>/tags/code/</link>
    <description>Recent content in code on trang1618</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>grixor@gmail.com (Trang Le)</managingEditor>
    <webMaster>grixor@gmail.com (Trang Le)</webMaster>
    <lastBuildDate>Thu, 18 Apr 2013 13:44:59 +0000</lastBuildDate>
    
	<atom:link href="/tags/code/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Debugging Tools in R with Michael Hannon</title>
      <link>/archives/2013-04-18-r-debug-tools/</link>
      <pubDate>Thu, 18 Apr 2013 13:44:59 +0000</pubDate>
      <author>grixor@gmail.com (Trang Le)</author>
      <guid>/archives/2013-04-18-r-debug-tools/</guid>
      <description>*Today at [Davis R Users&#39; Group](http://www.noamross.net/davis-r-users-group.html), Michael Hannon gave a great talk on how to use R&#39;s native debugging functions. Here are his notes and code.* Introduction ------------ This is a discussion of debugging techniques in R. It is based on a paper by Roger Peng, now at Johns Hopkins University () ### Focus on five functions: - traceback - debug - browser - trace - recover ### Severity level R mainly uses two ways of reporting a problem: - Warning: Does not stop execution - Error: More serious -- *does* stop execution Example of warning: ~~~~ {.</description>
    </item>
    
    <item>
      <title>A quick function for editing CSV files in R</title>
      <link>/archives/2012-11-19-editing-csv-files-in-r/</link>
      <pubDate>Mon, 19 Nov 2012 13:47:25 +0000</pubDate>
      <author>grixor@gmail.com (Trang Le)</author>
      <guid>/archives/2012-11-19-editing-csv-files-in-r/</guid>
      <description>I&#39;ve been hunting for a lightweight CSV editor for OSX so I could to make fixes to data files and not need to fire up Excel. While you can edit a CSV file in any text editor, it&#39;s a pain to navigate the files without a spreadsheet-like interface. Unfortunately [there doesn&#39;t seem to be a good, free option out there](http://apple.stackexchange.com/questions/66214/are-there-any-free-and-lightweight-spreadsheet-programs-for-the-mac). Today I remembered R has a native XCode editor for editing data frames, and I realized I could write a function that would load the CSV as a data frame, let me edit it, then close and save it in CSV format again.</description>
    </item>
    
    <item>
      <title>Displaying Math in RSS feeds</title>
      <link>/archives/2012-04-04-math-in-rss-feeds/</link>
      <pubDate>Wed, 04 Apr 2012 11:02:57 +0000</pubDate>
      <author>grixor@gmail.com (Trang Le)</author>
      <guid>/archives/2012-04-04-math-in-rss-feeds/</guid>
      <description>The equations in this blog are rendered using [MathJax](http://www.mathjax.org), which creates beautiful math from $\LaTeX$-style markup. However, the math doesn&#39;t appear in RSS feeds, because RSS doesn&#39;t allow Javascript. While I have a total of 12 RSS followers, this is how my closest collaborators, and my most math-y readers, are likely to read my posts, so I&#39;ve been looking for a way to produce readable equations in the RSS feed.</description>
    </item>
    
  </channel>
</rss>